{"ast":null,"code":"var _jsxFileName = \"/Users/jessieyang/Desktop/VANDY/Change++/quiz_app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Questionaire } from './components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://taylorswiftapi.herokuapp.com/get';\n\nfunction App() {\n  _s();\n\n  const [quote, setQuote] = useState(\"\");\n  const [song, setSong] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showAnswers, setShowAnswers] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  async function getRandomSong() {\n    const res = await axios.get(API_URL);\n    setQuote(res.data.quote);\n    setSong(res.data.song);\n  }\n\n  useEffect(() => {\n    getRandomSong(); //setQuestions(data.results);\n    // const questions = data.results.map((question) => \n    // ({\n    //   ...question,\n    //   answers: [\n    //     question.correct_answer,\n    //     ...question.incorrect_answers\n    //   ].sort(() => Math.random() - 0.5)\n    // }))\n    //setQuestions(questions);\n  }, []);\n\n  const handleAnswer = answer => {\n    //if (!showAnswers) {\n    // prevent double answers\n    if (answer === song\n    /*questions[currentIndex].correct_answer*/\n    ) {\n      setScore(score + 1);\n    } // }\n\n\n    setShowAnswers(true);\n  };\n\n  const handleNextQuestion = () => {\n    setShowAnswers(false);\n    setCurrentIndex(currentIndex + 1);\n  };\n\n  return (\n    /*#__PURE__*/\n\n    /*questions.length > 0 ?*/\n    _jsxDEV(\"div\", {\n      className: \"container\",\n      children: currentIndex === 5\n      /*>= questions.length*/\n      ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl text-white font-bold\",\n        children: [\"Game ended! Your score is \", score, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(Questionaire //data={questions[currentIndex]} \n      , {\n        showAnswers: showAnswers,\n        quote: quote,\n        song: song,\n        setInput: setInput,\n        input: input,\n        message: message,\n        setMessage: setMessage,\n        handleNextQuestion: handleNextQuestion,\n        handleAnswer: handleAnswer,\n        setShowAnswers: setShowAnswers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)\n  );\n  /*: (\n  <h2 className=\"text-2xl text-white font-bold\">Loading...</h2>\n  );*/\n}\n\n_s(App, \"sClz+6t8PflcEZX5FkUSEtfajyE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Questionaire","API_URL","App","quote","setQuote","song","setSong","input","setInput","currentIndex","setCurrentIndex","score","setScore","showAnswers","setShowAnswers","message","setMessage","getRandomSong","res","get","data","handleAnswer","answer","handleNextQuestion"],"sources":["/Users/jessieyang/Desktop/VANDY/Change++/quiz_app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Questionaire } from './components';\n\nconst API_URL = 'https://taylorswiftapi.herokuapp.com/get';\n\nfunction App() {\n  const [quote, setQuote] = useState(\"\");\n  const [song, setSong] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showAnswers, setShowAnswers] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\nasync function getRandomSong() {\n  const res = await axios.get(API_URL)\n      \n  setQuote(res.data.quote);\n  setSong(res.data.song);\n}\n\n  useEffect(() => {\n    getRandomSong()\n        //setQuestions(data.results);\n        // const questions = data.results.map((question) => \n        // ({\n        //   ...question,\n        //   answers: [\n        //     question.correct_answer,\n        //     ...question.incorrect_answers\n        //   ].sort(() => Math.random() - 0.5)\n        // }))\n\n        //setQuestions(questions);\n  }, []);\n\n  const handleAnswer = (answer) => {\n  //if (!showAnswers) {\n      // prevent double answers\n      if (answer === song/*questions[currentIndex].correct_answer*/) {\n        setScore(score + 1);\n      }\n   // }\n\n    setShowAnswers(true);\n  };\n\n  const handleNextQuestion = () => {\n    setShowAnswers(false);\n\n    setCurrentIndex(currentIndex + 1);\n  }\n\n  return /*questions.length > 0 ?*/ (\n    <div className='container'>\n      {currentIndex === 5/*>= questions.length*/ ? (\n        <h1 className='text-3xl text-white font-bold'>\n          Game ended! Your score is {score}!\n        </h1>\n      ) : (\n      <Questionaire \n        //data={questions[currentIndex]} \n        showAnswers={showAnswers}\n        quote = {quote}\n        song = {song}\n        setInput = {setInput}\n        input = {input}\n        message = {message}\n        setMessage = {setMessage}\n        handleNextQuestion={handleNextQuestion}\n        handleAnswer={handleAnswer}\n        setShowAnswers = {setShowAnswers}/>\n      )}\n    </div>\n  ) /*: (\n    <h2 className=\"text-2xl text-white font-bold\">Loading...</h2>\n  );*/\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,cAA7B;;AAEA,MAAMC,OAAO,GAAG,0CAAhB;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,CAAD,CAAhD;EACA,MAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,KAAD,CAA9C;EACA,MAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,EAAD,CAAtC;;EAEF,eAAeoB,aAAf,GAA+B;IAC7B,MAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAUlB,OAAV,CAAlB;IAEAG,QAAQ,CAACc,GAAG,CAACE,IAAJ,CAASjB,KAAV,CAAR;IACAG,OAAO,CAACY,GAAG,CAACE,IAAJ,CAASf,IAAV,CAAP;EACD;;EAECP,SAAS,CAAC,MAAM;IACdmB,aAAa,GADC,CAEV;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;EACL,CAbQ,EAaN,EAbM,CAAT;;EAeA,MAAMI,YAAY,GAAIC,MAAD,IAAY;IACjC;IACI;IACA,IAAIA,MAAM,KAAKjB;IAAI;IAAnB,EAA+D;MAC7DO,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;IACD,CAL4B,CAMhC;;;IAECG,cAAc,CAAC,IAAD,CAAd;EACD,CATD;;EAWA,MAAMS,kBAAkB,GAAG,MAAM;IAC/BT,cAAc,CAAC,KAAD,CAAd;IAEAJ,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;EACD,CAJD;;EAMA;IAAA;;IAAO;IACL;MAAK,SAAS,EAAC,WAAf;MAAA,UACGA,YAAY,KAAK;MAAC;MAAlB,eACC;QAAI,SAAS,EAAC,+BAAd;QAAA,yCAC6BE,KAD7B;MAAA;QAAA;QAAA;QAAA;MAAA,QADD,gBAKD,QAAC,YAAD,CACE;MADF;QAEE,WAAW,EAAEE,WAFf;QAGE,KAAK,EAAIV,KAHX;QAIE,IAAI,EAAIE,IAJV;QAKE,QAAQ,EAAIG,QALd;QAME,KAAK,EAAID,KANX;QAOE,OAAO,EAAIQ,OAPb;QAQE,UAAU,EAAIC,UARhB;QASE,kBAAkB,EAAEO,kBATtB;QAUE,YAAY,EAAEF,YAVhB;QAWE,cAAc,EAAIP;MAXpB;QAAA;QAAA;QAAA;MAAA;IANF;MAAA;MAAA;MAAA;IAAA;EADF;EAqBE;AACJ;AACA;AACC;;GAxEQZ,G;;KAAAA,G;AA0ET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}