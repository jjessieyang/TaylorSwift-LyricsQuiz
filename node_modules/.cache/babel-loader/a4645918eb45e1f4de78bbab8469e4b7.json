{"ast":null,"code":"var _jsxFileName = \"/Users/jessieyang/Desktop/VANDY/Change++/quiz_app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // only for 'Red' album\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://ws.audioscrobbler.com/2.0/?method=album.getinfo&api_key=7cdafb7ded210010decc01f3ba16f18a&artist=Taylor+Swift&album=red&format=json';\n\nfunction App() {\n  _s();\n\n  const [questions, setQuestions] = useState([]);\n  const [songs, setSongs] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [lyrics, setLyrics] = useState(\"\");\n  const [retryRandomOptions, setRetryRandomOptions] = useState(0);\n  useEffect(() => {\n    fetch(API_URL).then(res => res.json()).then(data => {\n      // setQuestions(data.results);\n      //console.log(data.quote);\n      setSongs(data.album.tracks.track);\n      console.log(\"songs\", data.items);\n    });\n  }, []);\n  useEffect(() => {\n    if (songs.length > 0) {\n      var randoms = [];\n\n      while (randoms.length < 3) {\n        var r = Math.floor(Math.random() * songs.length);\n        if (randoms.indexOf(r) === -1) randoms.push(r);\n      }\n\n      console.log(\"RANDOMS \", randoms);\n      const initialOptions = [{\n        song: songs[randoms[0]].name,\n        correct: true\n      }, {\n        song: songs[randoms[1]].name,\n        correct: false\n      }, {\n        song: songs[randoms[2]].name,\n        correct: false\n      }];\n      let shuffledOptions = initialOptions;\n\n      for (let i = shuffledOptions.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [shuffledOptions[i], shuffledOptions[j]] = [shuffledOptions[j], shuffledOptions[i]];\n      }\n\n      setOptions(shuffledOptions);\n    }\n  }, [songs, retryRandomOptions]);\n  useEffect(() => {\n    if (options.length > 0) {\n      const fetchLyrics = async () => {\n        const correctSong = options.filter(opt => opt.correct)[0].song.split(\" \").join(\"_\");\n        console.log(\"correct\", correctSong);\n        const url = `https://api.lyrics.ovh/v1/Taylor_Swift/${correctSong}`;\n\n        try {\n          const res = await fetch(url);\n          const data = await res.json();\n          let lyricsPhrases = data.lyrics;\n\n          if (lyricsPhrases == \"\") {\n            setRetryRandomOptions(prev => prev + 1);\n            console.log(\"Empty Lyrics, retrying\");\n          } else {\n            lyricsPhrases = lyricsPhrases.split(\"\\n\").filter(line => line !== \"\");\n            console.log(lyricsPhrases);\n            const randomLine = Math.floor(Math.random() * (lyricsPhrases.length - 1));\n            console.log(\"line \", randomLine, \" line1 \", lyricsPhrases[randomLine], \" line2 \", lyricsPhrases[randomLine + 1]);\n            setLyrics([lyricsPhrases[randomLine], lyricsPhrases[randomLine + 1]]);\n            console.log(\"laslyric\", lyrics);\n          }\n        } catch (err) {\n          console.error(err);\n          setRetryRandomOptions(prev => prev + 1);\n        }\n      };\n\n      fetchLyrics();\n    }\n  }, [options]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white text-purple-800 p-10 rounded-lg shadow-md\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 gap-6 mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-white p-4 text-purple-800 font-semibold rounded shadow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-white p-4 text-purple-800 font-semibold rounded shadow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-white p-4 text-purple-800 font-semibold rounded shadow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-white p-4 text-purple-800 font-semibold rounded shadow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"y3K8obgLIdvFDBOMavc0bEI5Tkk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","API_URL","App","questions","setQuestions","songs","setSongs","options","setOptions","lyrics","setLyrics","retryRandomOptions","setRetryRandomOptions","fetch","then","res","json","data","album","tracks","track","console","log","items","length","randoms","r","Math","floor","random","indexOf","push","initialOptions","song","name","correct","shuffledOptions","i","j","fetchLyrics","correctSong","filter","opt","split","join","url","lyricsPhrases","prev","line","randomLine","err","error"],"sources":["/Users/jessieyang/Desktop/VANDY/Change++/quiz_app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\n\n// only for 'Red' album\nconst API_URL = 'https://ws.audioscrobbler.com/2.0/?method=album.getinfo&api_key=7cdafb7ded210010decc01f3ba16f18a&artist=Taylor+Swift&album=red&format=json';\n\nfunction App() {\n  const [questions, setQuestions] = useState([]);\n  const [songs, setSongs] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [lyrics, setLyrics] = useState(\"\");\n  const [retryRandomOptions, setRetryRandomOptions] = useState(0);\n\n  useEffect(() => {\n    fetch(API_URL)\n      .then(res => res.json())\n      .then(data => {\n        // setQuestions(data.results);\n        //console.log(data.quote);\n\n        setSongs(data.album.tracks.track);\n        console.log(\"songs\", data.items);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (songs.length > 0) {\n      var randoms = []\n      while (randoms.length < 3) {\n        var r = Math.floor(Math.random() * songs.length)\n        if (randoms.indexOf(r) === -1) randoms.push(r)\n      }\n\n      console.log(\"RANDOMS \", randoms)\n\n      const initialOptions = [\n        { song: songs[randoms[0]].name, correct: true },\n        { song: songs[randoms[1]].name, correct: false },\n        { song: songs[randoms[2]].name, correct: false },\n      ]\n\n      let shuffledOptions = initialOptions\n      for (let i = shuffledOptions.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1))\n        ;[shuffledOptions[i], shuffledOptions[j]] = [\n          shuffledOptions[j],\n          shuffledOptions[i],\n        ]\n      }\n\n      setOptions(shuffledOptions)\n    }\n  }, [songs, retryRandomOptions])\n\n  useEffect(() => {\n    if (options.length > 0) {\n      \n      const fetchLyrics = async () => {\n        const correctSong = options\n          .filter((opt) => opt.correct)[0]\n          .song.split(\" \")\n          .join(\"_\")\n        console.log(\"correct\", correctSong)\n        const url = `https://api.lyrics.ovh/v1/Taylor_Swift/${correctSong}`\n        try {\n          const res = await fetch(url)\n          const data = await res.json()\n          let lyricsPhrases = data.lyrics\n          if (lyricsPhrases == \"\") {\n            setRetryRandomOptions((prev) => prev + 1)\n            console.log(\"Empty Lyrics, retrying\")\n          } else {\n            \n            lyricsPhrases = lyricsPhrases\n              .split(\"\\n\")\n              .filter((line) => line !== \"\")\n            console.log(lyricsPhrases)\n            const randomLine = Math.floor(\n              Math.random() * (lyricsPhrases.length - 1)\n            )\n            console.log(\n              \"line \",\n              randomLine,\n              \" line1 \",\n              lyricsPhrases[randomLine],\n              \" line2 \",\n              lyricsPhrases[randomLine + 1]\n            )\n            setLyrics([\n              lyricsPhrases[randomLine],\n              lyricsPhrases[randomLine + 1],\n            ])\n            console.log(\"laslyric\", lyrics)\n          }\n        } catch (err) {\n          console.error(err)\n          setRetryRandomOptions((prev) => prev + 1)\n        }\n      }\n      fetchLyrics()\n    }\n  }, [options])\n\n  return (\n    <div className=\"container\">\n      <div className='bg-white text-purple-800 p-10 rounded-lg shadow-md'>\n        <h2 className='text-2xl'>\n          \n        </h2>\n      </div>\n      <div className='grid grid-cols-2 gap-6 mt-6'>\n        <button className='bg-white p-4 text-purple-800 font-semibold rounded shadow'>\n          \n        </button>\n        <button className='bg-white p-4 text-purple-800 font-semibold rounded shadow'>\n          \n        </button>\n        <button className='bg-white p-4 text-purple-800 font-semibold rounded shadow'>\n         \n        </button>\n        <button className='bg-white p-4 text-purple-800 font-semibold rounded shadow'>\n          \n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}