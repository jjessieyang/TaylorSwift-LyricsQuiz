{"ast":null,"code":"var _jsxFileName = \"/Users/jessieyang/Desktop/VANDY/Change++/quiz_app/src/components/Questionaire.js\";\nimport React from 'react'; // Clears the input field after clicking \"Submit\" button\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction handleSubmit() {\n  document.getElementById(\"input\").value = \"\";\n}\n\nconst allLowerCase = str => {\n  return str.toLowerCase();\n};\n\nconst Questionaire = _ref => {\n  let {\n    showAnswers,\n    setShowAnswers,\n    handleNextQuestion,\n    handleAnswer,\n    setInput,\n    input,\n    setMessage,\n    message,\n    quote,\n    song\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white text-purple-800 p-10 rounded-lg shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"What song is this from?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl\",\n        dangerouslySetInnerHTML: {\n          __html: quote\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"input\",\n        style: {\n          border: '2px solid',\n          borderColor: 'purple',\n          padding: '3px',\n          marginRight: '6px',\n          borderRadius: '5px'\n        },\n        type: \"text\",\n        onChange: e => {\n          setInput(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          border: '2px solid',\n          borderColor: 'purple',\n          padding: '3px',\n          borderRadius: '5px'\n        },\n        onClick: () => {\n          setShowAnswers(true);\n          handleSubmit();\n\n          if (allLowerCase(input) === allLowerCase(song)) {\n            setMessage(\"Correct!\");\n            handleAnswer(input);\n          } else {\n            setMessage(`Wrong! Song was: \"${song}\" | Your answer: ${input}`);\n          }\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), showAnswers && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: async () => {\n        setMessage(\"\");\n        handleNextQuestion(false);\n      },\n      className: `ml-auto mt-6 bg-purple-700 text-white p-4 font-semibold rounded shadow`,\n      children: \"Next Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Questionaire;\nexport default Questionaire;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questionaire\");","map":{"version":3,"names":["React","handleSubmit","document","getElementById","value","allLowerCase","str","toLowerCase","Questionaire","showAnswers","setShowAnswers","handleNextQuestion","handleAnswer","setInput","input","setMessage","message","quote","song","__html","border","borderColor","padding","marginRight","borderRadius","e","target"],"sources":["/Users/jessieyang/Desktop/VANDY/Change++/quiz_app/src/components/Questionaire.js"],"sourcesContent":["import React from 'react'\n\n// Clears the input field after clicking \"Submit\" button\nfunction handleSubmit() {\n    document.getElementById(\"input\").value = \"\"\n}\n\nconst allLowerCase = (str) => {\n    return str.toLowerCase();\n  };\n\nconst Questionaire = ({\n    showAnswers,\n    setShowAnswers,\n    handleNextQuestion,\n    handleAnswer,\n    setInput,\n    input,\n    setMessage,\n    message,\n    quote,\n    song,\n}) => { return (\n    <div className = 'flex flex-col' >\n        <div className = 'bg-white text-purple-800 p-10 rounded-lg shadow-md' >\n            <h1>What song is this from?</h1>\n            <h2 className = 'text-2xl' dangerouslySetInnerHTML = {{ __html: quote}} />\n\n             { /* Receives user's answer and sets input to their answer */ }\n            <input id=\"input\" \n            style={{ border: '2px solid', borderColor: 'purple', padding: '3px', marginRight: '6px', borderRadius: '5px' }} \n            type=\"text\" onChange={(e) => {\n                setInput(e.target.value)\n            }} />\n\n            { /* Submit Button: \n                    Lets user know if they were correct\n                    Clears input field after clicking\n                    Updates score if correct answer */ }\n            <button type=\"submit\" style={{ border: '2px solid', borderColor: 'purple', padding: '3px', borderRadius: '5px' }} onClick={() => {\n                setShowAnswers(true)\n                handleSubmit()\n                \n                if (allLowerCase(input) === allLowerCase(song)){\n                    setMessage(\"Correct!\")\n                    handleAnswer(input)\n                } else {\n                    setMessage(`Wrong! Song was: \"${song}\" | Your answer: ${input}`)\n                }\n            }}>Submit</button>\n\n            <p>{message}</p>\n        </div>\n        \n        \n        { /* Next Question Button: \n                Resets message\n                Resets \"Next Question\" button so it's hidden for the next question */ }\n        {showAnswers && (\n        <button onClick={(async ()=>{\n            setMessage(\"\")\n            handleNextQuestion(false)\n        })} \n            className={`ml-auto mt-6 bg-purple-700 text-white p-4 font-semibold rounded shadow`} >\n            Next Question</button>\n        )}\n    </div>\n)\n};\n\n\nexport default Questionaire;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;;;AACA,SAASC,YAAT,GAAwB;EACpBC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAAjC,GAAyC,EAAzC;AACH;;AAED,MAAMC,YAAY,GAAIC,GAAD,IAAS;EAC1B,OAAOA,GAAG,CAACC,WAAJ,EAAP;AACD,CAFH;;AAIA,MAAMC,YAAY,GAAG,QAWf;EAAA,IAXgB;IAClBC,WADkB;IAElBC,cAFkB;IAGlBC,kBAHkB;IAIlBC,YAJkB;IAKlBC,QALkB;IAMlBC,KANkB;IAOlBC,UAPkB;IAQlBC,OARkB;IASlBC,KATkB;IAUlBC;EAVkB,CAWhB;EAAE,oBACJ;IAAK,SAAS,EAAG,eAAjB;IAAA,wBACI;MAAK,SAAS,EAAG,oDAAjB;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAI,SAAS,EAAG,UAAhB;QAA2B,uBAAuB,EAAI;UAAEC,MAAM,EAAEF;QAAV;MAAtD;QAAA;QAAA;QAAA;MAAA,QAFJ,eAKI;QAAO,EAAE,EAAC,OAAV;QACA,KAAK,EAAE;UAAEG,MAAM,EAAE,WAAV;UAAuBC,WAAW,EAAE,QAApC;UAA8CC,OAAO,EAAE,KAAvD;UAA8DC,WAAW,EAAE,KAA3E;UAAkFC,YAAY,EAAE;QAAhG,CADP;QAEA,IAAI,EAAC,MAFL;QAEY,QAAQ,EAAGC,CAAD,IAAO;UACzBZ,QAAQ,CAACY,CAAC,CAACC,MAAF,CAAStB,KAAV,CAAR;QACH;MAJD;QAAA;QAAA;QAAA;MAAA,QALJ,eAeI;QAAQ,IAAI,EAAC,QAAb;QAAsB,KAAK,EAAE;UAAEgB,MAAM,EAAE,WAAV;UAAuBC,WAAW,EAAE,QAApC;UAA8CC,OAAO,EAAE,KAAvD;UAA8DE,YAAY,EAAE;QAA5E,CAA7B;QAAkH,OAAO,EAAE,MAAM;UAC7Hd,cAAc,CAAC,IAAD,CAAd;UACAT,YAAY;;UAEZ,IAAII,YAAY,CAACS,KAAD,CAAZ,KAAwBT,YAAY,CAACa,IAAD,CAAxC,EAA+C;YAC3CH,UAAU,CAAC,UAAD,CAAV;YACAH,YAAY,CAACE,KAAD,CAAZ;UACH,CAHD,MAGO;YACHC,UAAU,CAAE,qBAAoBG,IAAK,oBAAmBJ,KAAM,EAApD,CAAV;UACH;QACJ,CAVD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAfJ,eA2BI;QAAA,UAAIE;MAAJ;QAAA;QAAA;QAAA;MAAA,QA3BJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAmCKP,WAAW,iBACZ;MAAQ,OAAO,EAAG,YAAU;QACxBM,UAAU,CAAC,EAAD,CAAV;QACAJ,kBAAkB,CAAC,KAAD,CAAlB;MACH,CAHD;MAII,SAAS,EAAG,wEAJhB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QApCJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADI;AA8CP,CAzDD;;KAAMH,Y;AA4DN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}